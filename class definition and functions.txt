class  정의서
--● 메소드

1.Sale 
-- 정의 : 판매 될때 마다 객체로 저장하기 위한 클래스
-- 변수 : salecode / sname / price / saledate
--        ( 세일코드, 메뉴 이름, 금액, 판매된 날짜)
-- 생성자
-- getter, setter

2. Menu 
-- 정의 :
-- 변수: pName / pNumSales / pSalePrice
--        메뉴 이름, 판매된 메뉴의 개수, 메뉴 당 총 판매액
-- 생성자
--getter, setter

3. SaleDao
●ArrayList <Sale> getSaleList(Connection conn)  : 관리자가 전체 Sale DB  확인 가능한 메소드
	
●int insertSale(Connection conn, ArrayList<Sale> list) :  회원이 산 메뉴를 Sale DB에 저장하는 메소드

●int getTotalSalePrice(Connection conn) :  Sale DB에서 Sum(Price) = 전체 판매액 가져 오는 메소드

●ArrayList<Menu> getMenuSalePrice(Connection conn) : Sale DB에서 메뉴당 판매수와 판매액을 가져오는 메소드

4. SaleManager
●void saleList() : 관리자가 sale 전체 리스트 확인하기

●int totalSalePrice()  : 관리자가 오늘 전체 판매액 확인하기 -> return totalSalePrice;

●void menuSalePrice() : 관리자가 오늘 메뉴당 판매수와 판매액 확인하기

●void order(String currentId) : 주문하기 메소드 -> sale db에 저장된다.


5. Point(리팩토링)

●int readPoint(String currentId) : 포인트 확인하기( Member DB에서 가져온다)

●void savePoint(String currentId, int expectedPoint) : 포인트 적립하기

●void usePoint(String currentId, int totalPrice)  : 포인트 사용하기( 조건 : 가지고 있는 포인트가 결제 금액 보다 클 때 호출한다.
	                                                                         beforePoint >= totalPrice)

●void usePoint2(String currentId) : 포인트 사용하기 2( 조건: 가지고 있는 포인트보다 결제 금액이 클때 호출 ->모든 포인트 다쓰고 0이된다. point = 0
						beforePoint < totalPrice)
		
------------------------------------------------------------------------------------------------------------------------------------------------------------------
1.Member
--정의 : 회원의 정보를 저장한다.
-- 변수:  private int memcode; 
	private String name; 
	private String id;
	private String pw;
	private String address;
	private String phone;
	private double point;

-- 생성자
-- getter/ setter

2.MemberDao
●ArrayList<Member> getList(Connection con) : Member 전체 리스트 가져오기(READ)

●ArrayList<Member> getList(Connection con, String currentId) : 회원 정보 보기( 특정회원의 정보만 가져온다) ,READ

●int insertMem(Connection con, Member mem) : 회원 가입 , 회원 정보 INSERT

●int editMem(Connection con, Member mem, String currentId) : 회원정보 수정 UPDATE

●int deleteMem(Connection con, String currentId)  : 회원탈퇴 DELETE

●int readPoint(Connection con , String currentId) : 회원 포인트 읽어오기(READ)

3.MemberManager
●void memList() : 회원 정보 전체 출력

●void myInfo() : 특정 회원의 정보보기

●void memAdd() : 회원가입

●void memEdit() : 회원 정보 수정

●void memDel() : 회원 탈퇴

●void chkLogin() : 로그인

●String chKOverlap() : 아이디 중복 테스트

●void memPoint(String currentId) : 포인트 조회하기

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Menu,
Login


